map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
 listen 80 default_server;
 server_name 172.27.60.111;

 root /var/www/html;
 index index.html;

 # P√°gina raiz simples
 location = / {
        return 200 'Servidor ativo';
        add_header Content-Type text/plain;
 }

 # Projeto React - BKAutoCenter
 location /bkautocenter/ {
        try_files $uri /bkautocenter/index.html;
 }

 # Projeto React - bkautocenter1
 location /bkautocenter1/ {
        try_files $uri /bkautocenter1/index.html;
 }

 # Projeto Angular - GPAC
 location /gpac/ {
        try_files $uri $uri/ /gpac/index.html;
 }

 # Projeto React - aguanaboca
 location /aguanaboca/ {
        try_files $uri $uri/ /aguanaboca/index.html;
 }

 # Projeto React - Equora Systems
 location /equora/ {
        alias /var/www/equora/frontend/dist/;
        try_files $uri $uri/ /equora/index.html;
 }

 # Projeto React - NewsDay - servir assets corretamente
 location /newsday/ {
        alias /var/www/newsday/frontend/dist/;
        try_files $uri $uri/ /newsday/index.html;
 }

 # üêü NOVO: Projeto React - N√≠vel do Mar Pescados
 # Redireciona /niveldomar  -> /niveldomar/ (consist√™ncia com outras apps)
 location /niveldomar/ {
        root /var/www/html;
        index index.html;
        try_files $uri $uri/ /niveldomar/index.html;
        access_log /var/log/nginx/niveldomar.access.log;
        error_log /var/log/nginx/niveldomar.error.log warn;
 }

 # üöó NOVO: Projeto React - AutoCenter
 location /autocare/ {
        alias /var/www/autocare/frontend/dist/;
        index index.html;
        try_files $uri $uri/ /autocare/index.html;
        access_log /var/log/nginx/autocare.access.log;
        error_log /var/log/nginx/autocare.error.log warn;
 }

 # API existente (porta 8000)
 location /api/ {
        proxy_pass http://127.0.0.1:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Adicionar cabe√ßalhos CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
 }

 # üêü NOVO: API N√≠vel do Mar (porta 8001)
 location /niveldomar-api/ {
        proxy_pass http://127.0.0.1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Adicionar cabe√ßalhos CORS
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;   
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;       

        # Responder preflight rapidamente
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
 }

 # üöó NOVO: API AutoCenter (porta 8008)
  location /autocare-api/ {
        # Encaminhar para o backend incluindo o prefixo /api/ para casar com as rotas do FastAPI
        proxy_pass http://127.0.0.1:8008/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
       # Informar prefixo externo ao backend e reescrever Location retornadas
        proxy_set_header X-Forwarded-Prefix /autocare-api;
        proxy_set_header X-Forwarded-Host $host;
        proxy_redirect ~^https?://[^/]+/api/(.*) /autocare-api/$1;
        proxy_redirect /api/ /autocare-api/;

        # Adicionar cabe√ßalhos CORS
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;   
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;       

        # Responder preflight rapidamente
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
 }

 # NOVO: WebSocket para Nilmar Chatbot (match exato)
 location = /niveldomar-api/chatbot/ws {
       proxy_pass http://127.0.0.1:8001/api/chatbot/ws;
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $connection_upgrade;
        # Informar prefixo ao backend (FastAPI middleware usa X-Forwarded-Prefix)
       proxy_set_header X-Forwarded-Prefix /niveldomar-api;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;

    # Timeouts para WebSocket
       proxy_read_timeout 86400;
       proxy_send_timeout 86400;

    # Buffering
       proxy_buffering off;
 }

 # üêü NOVO: Documenta√ß√£o da API N√≠vel do Mar
 location /niveldomar-docs/ {
        proxy_pass http://127.0.0.1:8001/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Remover sufixo da URL para o backend
        rewrite ^/niveldomar-docs/(.*)$ /docs/$1 break;
 }

 # üöó NOVO: Documenta√ß√£o da API AutoCenter
 location /autocare-docs/ {
        proxy_pass http://127.0.0.1:8008/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Remover sufixo da URL para o backend
        rewrite ^/autocare-docs/(.*)$ /docs/$1 break;
 }

 # üêü NOVO: Health check N√≠vel do Mar
 location /niveldomar-health {
        proxy_pass http://127.0.0.1:8001/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
 }

 # üöó NOVO: Health check AutoCenter
 location /autocare-health {
        proxy_pass http://127.0.0.1:8008/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
 }

 # Proxy para LibreTranslate local (evita CORS porque fica na mesma origem)
 location /libretranslate/ {
        proxy_pass http://127.0.0.1:5000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS - enviar sempre (inclui respostas 3xx/4xx/5xx)
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;   
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;

        # Responder preflight rapidamente no NGINX (sem encaminhar para o backend)
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
 }
}